{"version":3,"sources":["GoodList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsList","map","good","goodsFromServer","App","useState","goods","setGoods","isVisible","setIsVisible","visibleGoods","reset","className","type","onClick","prev","reverse","sort","a","b","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,OACE,6BACGA,EAAUC,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,SCLXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAAS,GAAD,OAAKF,IAAvC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,YAAOJ,GAcnBK,EAAQ,WACZJ,EAAS,GAAD,OAAKJ,KAYf,OACE,sBAAKS,UAAU,MAAf,UACE,uCACEJ,EASA,wBACEK,KAAK,SACLC,QAvBK,WACXL,GAAa,GACbE,KAmBI,kBARA,wBACEE,KAAK,SACLC,QA/BM,WACZL,GAAa,IA4BT,mBAeDD,GAEK,gCACE,wBACEK,KAAK,SACLC,QA7CE,WACdP,GAAS,SAAAQ,GAAI,mBAAQA,EAAKC,eA0ChB,qBAMA,wBACEH,KAAK,SACLC,QA/CO,WACnBP,GAAS,SAAAQ,GAAI,mBAAQA,EAAKE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,WA4C/C,8BAMA,wBACEN,KAAK,SACLC,QAxCO,WACnBP,GAAS,SAAAQ,GAAI,OAAI,YAAIA,GAAME,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,cAqC7C,4BAMA,wBACER,KAAK,SACLC,QAASH,EAFX,mBAOA,cAAC,EAAD,CAAWX,UAAWU,WC5FpCY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c0b5843.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goodsList: string[];\n};\nexport const GoodsList: React.FC<Props> = ({ goodsList }) => {\n  return (\n    <ul>\n      {goodsList.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const visibleGoods = [...goods];\n\n  const start = () => {\n    setIsVisible(true);\n  };\n\n  const reverse = () => {\n    setGoods(prev => [...prev.reverse()]);\n  };\n\n  const sortAlphabet = () => {\n    setGoods(prev => [...prev.sort((a, b) => a.localeCompare(b))]);\n  };\n\n  const reset = () => {\n    setGoods([...goodsFromServer]);\n  };\n\n  const stop = () => {\n    setIsVisible(false);\n    reset();\n  };\n\n  const sortByLength = () => {\n    setGoods(prev => [...prev].sort((a, b) => a.length - b.length));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!isVisible ? (\n        <button\n          type=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n\n      ) : (\n        <button\n          type=\"button\"\n          onClick={stop}\n        >\n          Stop\n        </button>\n      )}\n      {isVisible\n          && (\n            <div>\n              <button\n                type=\"button\"\n                onClick={reverse}\n              >\n                reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={sortAlphabet}\n              >\n                Sort in AlphaBet\n              </button>\n              <button\n                type=\"button\"\n                onClick={sortByLength}\n              >\n                sort by length\n              </button>\n              <button\n                type=\"button\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n\n              <GoodsList goodsList={visibleGoods} />\n            </div>\n          )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}