{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","GoodsList","goodsList","map","good","App","useState","goods","setGoods","isVisible","setIsVisible","visibleGoods","reset","className","type","onClick","prev","reverse","sort","a","b","localeCompare","length","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC3C,OACE,6BACGA,EAAUC,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,SAyGFC,EAjGO,WACpB,MAA0BC,mBAAS,GAAD,OAAKN,IAAvC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,YAAOJ,GAcnBK,EAAQ,WACZJ,EAAS,GAAD,OAAKR,KAYf,OACE,sBAAKa,UAAU,MAAf,UACE,uCACEJ,EAWA,wBACEK,KAAK,SACLC,QAAS,WAxBfL,GAAa,GACbE,KAqBI,kBAVA,wBACEE,KAAK,SACLC,QAAS,WA9BfL,GAAa,IA4BT,mBAmBDD,GAEK,gCACE,wBACEK,KAAK,SACLC,QAAS,WAhDrBP,GAAS,SAAAQ,GAAI,mBAAQA,EAAKC,eA8ChB,qBAQA,wBACEH,KAAK,SACLC,QAAS,WApDrBP,GAAS,SAAAQ,GAAI,mBAAQA,EAAKE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,WAkD/C,8BAQA,wBACEN,KAAK,SACLC,QAAS,WA/CrBP,GAAS,SAAAQ,GAAI,OAAI,YAAIA,GAAME,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,cA6C7C,4BAQA,wBACER,KAAK,SACLC,QAAS,WACPH,KAHJ,mBASA,cAAC,EAAD,CAAWV,UAAWS,WCvHpCY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2d32c448.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {\n  goodsList: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goodsList }) => {\n  return (\n    <ul>\n      {goodsList.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const visibleGoods = [...goods];\n\n  const start = () => {\n    setIsVisible(true);\n  };\n\n  const reverse = () => {\n    setGoods(prev => [...prev.reverse()]);\n  };\n\n  const sortAlphabet = () => {\n    setGoods(prev => [...prev.sort((a, b) => a.localeCompare(b))]);\n  };\n\n  const reset = () => {\n    setGoods([...goodsFromServer]);\n  };\n\n  const stop = () => {\n    setIsVisible(false);\n    reset();\n  };\n\n  const sortByLength = () => {\n    setGoods(prev => [...prev].sort((a, b) => a.length - b.length));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!isVisible ? (\n        <button\n          type=\"button\"\n          onClick={() => {\n            start();\n          }}\n        >\n          Start\n        </button>\n\n      ) : (\n        <button\n          type=\"button\"\n          onClick={() => {\n            stop();\n          }}\n        >\n          Stop\n        </button>\n      )}\n      {isVisible\n          && (\n            <div>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  reverse();\n                }}\n              >\n                reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  sortAlphabet();\n                }}\n              >\n                Sort in AlphaBet\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  sortByLength();\n                }}\n              >\n                sort by length\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  reset();\n                }}\n              >\n                Reset\n              </button>\n\n              <GoodsList goodsList={visibleGoods} />\n            </div>\n          )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}